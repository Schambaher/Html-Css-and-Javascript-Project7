{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,YAAY,YACZC,MAAOV,EACPW,SAlBqB,SAACR,GAC1BF,EAAcE,EAAES,OAAOF,a,+BCLdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCDPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAWC,IAAKf,EAAKgB,IAAKN,MAE7C,qBAAKI,UAAU,cAAf,SACI,mBAAGA,UAAU,aAAb,SAA4BJ,UCR/BO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECDwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAhB,GACFc,EAAS,CACLf,KAAMC,EACNY,SAAS,SAGtB,CAAEpB,IAEEqB,EDhBwBI,CAAczB,GAAhCQ,EAAb,EAAQD,KAAWa,EAAnB,EAAmBA,QAEnB,OACI,sBAAKJ,UAAU,cAAf,UACI,oBAAIA,UAAU,oBAAd,SAAmChB,IACjCoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEQR,EAAKC,KAAK,SAACC,GAAD,OACN,cAAC,EAAD,eAESA,GADAA,EAAIC,aEStBe,EArBM,WACnB,MAAoCzC,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACE,sBAAKgC,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,0BAEA,cAAC,EAAD,CAAahC,cAAeA,IAE5B,uBAECS,EAAWgB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAEEA,SAAUA,GADLA,U,MCVf2B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.1c92bd4a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInnputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={inputValue}\r\n        onChange={handleInnputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","\r\n\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QtV5zpw9hl9njljchuAp0v0IQ69ZO9vs`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    //console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <div className=\"card-image\">\r\n                <img className=\"card-img\" src={url} alt={title}/>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <p className=\"card-title\">{ title }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:gifs, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <div className=\"section-gif\">\r\n            <h3 className=\"section-gif-title\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    gifs.map( (gif) => (\r\n                        <GifGridItem \r\n                            key={gif.id} \r\n                            { ...gif }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(gifs => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [ category ] )\r\n\r\n    return state; // {data:[], loading:true}\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"title-principal\">GifExpertApp</h2>\r\n\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      <hr />\r\n\r\n      {categories.map((category) =>(\r\n        <GifGrid \r\n          key={category} \r\n          category={category}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport GifExpertApp from \"./GifExpertApp\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}